{"ast":null,"code":"var _jsxFileName = \"/Users/bohdanmacbook/Downloads/tin_frontend(fixed)/src/components/updateForm/UpdateUserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BASE_URL } from \"../../config\";\nimport axios from \"axios\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateUserForm() {\n  _s();\n  const [success, setSuccess] = useState(false);\n  const [err, setErr] = useState(\"\");\n  const validationSchema = () => {\n    return Yup.object().shape({\n      userId: Yup.number().required(\"User ID is required\"),\n      login: Yup.string().required(\"Login is required\"),\n      email: Yup.string().required(\"Email is required\").email(\"Email is invalid\"),\n      password: Yup.string().required(\"Password is required\").min(6, \"Password must be at least 6 characters\").max(40, \"Password must not exceed 40 characters\")\n    });\n  };\n  const handleSubmit = (data, _ref) => {\n    let {\n      resetForm\n    } = _ref;\n    let userId = data.userId;\n    let userData = {\n      login: data.login,\n      password: data.password,\n      email: data.email\n    };\n    axios.put(BASE_URL + `update/user/${userId}`, userData).then(resp => {\n      resetForm({\n        data: \"\"\n      });\n      setSuccess(true);\n      setErr(\"\");\n    }).catch(err => {\n      setSuccess(false);\n      setErr(\"Wrong UserID\");\n    });\n  };\n  const initialValues = {\n    userId: \"\",\n    login: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [success ? /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-primary\",\n      children: \"User Updated Successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : null, err.length > 0 && /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-danger\",\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: handleSubmit,\n      validationSchema: validationSchema,\n      children: _ref2 => {\n        let {\n          errors,\n          touched,\n          resetForm\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"User Id to Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"userId\",\n              type: \"number\",\n              className: \"form-control\" + (errors.userId && touched.userId ? \" is-invalid\" : \"\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"userId\",\n              component: \"div\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"login\",\n              type: \"text\",\n              className: \"form-control\" + (errors.login && touched.login ? \" is-invalid\" : \"\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"login\",\n              component: \"div\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \" Email \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              type: \"email\",\n              className: \"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \" Password \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              type: \"password\",\n              className: \"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-success btn-sm\",\n              children: \"UPDATE RECORD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: resetForm,\n              className: \"btn btn-info btn-sm\",\n              children: \"RESET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UpdateUserForm, \"ufBJVcaAFGC+H7gK7Z987ea5ECM=\");\n_c = UpdateUserForm;\nexport default UpdateUserForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateUserForm\");","map":{"version":3,"names":["React","useState","BASE_URL","axios","Formik","Field","Form","ErrorMessage","Yup","UpdateUserForm","success","setSuccess","err","setErr","validationSchema","object","shape","userId","number","required","login","string","email","password","min","max","handleSubmit","data","resetForm","userData","put","then","resp","catch","initialValues","length","errors","touched"],"sources":["/Users/bohdanmacbook/Downloads/tin_frontend(fixed)/src/components/updateForm/UpdateUserForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BASE_URL } from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction UpdateUserForm() {\r\n  const [success, setSuccess] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n  const validationSchema = () => {\r\n    return Yup.object().shape({\r\n      userId: Yup.number().required(\"User ID is required\"),\r\n      login: Yup.string().required(\"Login is required\"),\r\n      email: Yup.string()\r\n        .required(\"Email is required\")\r\n        .email(\"Email is invalid\"),\r\n      password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(6, \"Password must be at least 6 characters\")\r\n        .max(40, \"Password must not exceed 40 characters\"),\r\n    });\r\n  };\r\n  const handleSubmit = (data, { resetForm }) => {\r\n    let userId = data.userId;\r\n    let userData = {\r\n      login: data.login,\r\n      password: data.password,\r\n      email: data.email,\r\n    };\r\n    axios\r\n      .put(BASE_URL + `update/user/${userId}`, userData)\r\n      .then((resp) => {\r\n        resetForm({ data: \"\" });\r\n        setSuccess(true);\r\n        setErr(\"\");\r\n      })\r\n      .catch((err) => {\r\n        setSuccess(false);\r\n        setErr(\"Wrong UserID\");\r\n      });\r\n  };\r\n  const initialValues = {\r\n    userId: \"\",\r\n    login: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  return (\r\n    <>\r\n      {success ? (\r\n        <h5 className=\"text-primary\">User Updated Successfully!</h5>\r\n      ) : null}\r\n      {err.length > 0 && <h5 className=\"text-danger\">{err}</h5>}\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ errors, touched, resetForm }) => (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <label>User Id to Update</label>\r\n              <Field\r\n                name=\"userId\"\r\n                type=\"number\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.userId && touched.userId ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"userId\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Login</label>\r\n              <Field\r\n                name=\"login\"\r\n                type=\"text\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.login && touched.login ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"login\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\"> Email </label>\r\n              <Field\r\n                name=\"email\"\r\n                type=\"email\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\"> Password </label>\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className={\r\n                  \"form-control\" +\r\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                }\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"invalid-feedback\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group mt-2\">\r\n              <button type=\"submit\" className=\"btn btn-success btn-sm\">\r\n                UPDATE RECORD\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={resetForm}\r\n                className=\"btn btn-info btn-sm\"\r\n              >\r\n                RESET\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateUserForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}