{"ast":null,"code":"var _jsxFileName = \"/Users/bohdanmacbook/Downloads/tin_frontend(MP3)/src/components/loginForm/loginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Send a POST request to your backend with the login and password\n    const response = await fetch(\"/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        login,\n        password\n      })\n    });\n\n    // If the response is successful, extract the JWT token from the response\n    if (response.ok) {\n      const token = await response.text();\n\n      // Store the JWT token in the browser's local storage\n      localStorage.setItem(\"token\", token);\n\n      // Redirect the user to the protected page\n      window.location.href = \"/protected\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Login:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: login,\n        onChange: e => setLogin(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"oj4IVc1nxxF/GhK97+UTra4rMOg=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Login","login","setLogin","password","setPassword","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","token","text","localStorage","setItem","window","location","href","target","value"],"sources":["/Users/bohdanmacbook/Downloads/tin_frontend(MP3)/src/components/loginForm/loginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Login = () => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Send a POST request to your backend with the login and password\n        const response = await fetch(\"/api/v1/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ login, password }),\n        });\n\n        // If the response is successful, extract the JWT token from the response\n        if (response.ok) {\n            const token = await response.text();\n\n            // Store the JWT token in the browser's local storage\n            localStorage.setItem(\"token\", token);\n\n            // Redirect the user to the protected page\n            window.location.href = \"/protected\";\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                Login:\n                <input\n                    type=\"text\"\n                    value={login}\n                    onChange={(e) => setLogin(e.target.value)}\n                />\n            </label>\n            <br />\n            <label>\n                Password:\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n            </label>\n            <br />\n            <button type=\"submit\">Login</button>\n        </form>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMM,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;;IAElB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,KAAK;QAAEE;MAAS,CAAC;IAC5C,CAAC,CAAC;;IAEF;IACA,IAAIK,QAAQ,CAACO,EAAE,EAAE;MACb,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;;MAEnC;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;;MAEpC;MACAI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,YAAY;IACvC;EACJ,CAAC;EAED,oBACI;IAAM,QAAQ,EAAEjB,YAAa;IAAA,wBACzB;MAAA,WAAO,QAEH;QACI,IAAI,EAAC,MAAM;QACX,KAAK,EAAEJ,KAAM;QACb,QAAQ,EAAGK,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACiB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC5C;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAO,WAEH;QACI,IAAI,EAAC,UAAU;QACf,KAAK,EAAErB,QAAS;QAChB,QAAQ,EAAGG,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACiB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/C;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACjC;AAEf,CAAC;AAAC,GAnDIxB,KAAK;AAAA,KAALA,KAAK;AAqDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}